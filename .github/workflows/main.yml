name: real-master-bot-image

on: # specify the build to trigger the automated ci/cd
    push:
        branches:
            - "main"

jobs:
    build:
        name: Build Docker image
        runs-on: ubuntu-latest # specify the build machine
        steps:
            - # checkout to the repository on the build machine
                name: Checkout
                uses: actions/checkout@v4
            - # login to Docker Hub using the secrets provided
                name: Login to Docker Hub
                uses: docker/login-action@v3
                with:
                  username: ${{ secrets.DOCKERHUB_USERNAME }}
                  password: ${{ secrets.DOCKERHUB_TOKEN }}
            - # create a build kit builder instance
                name: Set up Docker Buildx
                uses: docker/setup-buildx-action@v3
            - # build the container image and push it to Docker \
                # Hub with the name clockbox.
                name: Build and push
                uses: docker/build-push-action@v5
                with:
                  file: ./Dockerfile
                  push: true
                  tags: ${{ secrets.DOCKERHUB_USERNAME }}/real-master-bot:latest
                
            - # create the SSH Key
                name: Set up SSH key
                run: |
                    env
                    mkdir -p ~/.ssh
                    echo "${{ secrets.ARTIFACT_SSH_KEY }}" > ~/.ssh/id_rsa
                    chmod 600 ~/.ssh/id_rsa
                    ssh-keyscan -p 22 ${{ secrets.AZURE_SERVER_IP }} >> ~/.ssh/known_hosts
                    sudo apt-get install sshpass
            - 
                name: Deploy to server
                run: |
                      ssh -v -o StrictHostKeyChecking=no ${{ secrets.AZURE_SERVER_USER }}@${{ secrets.AZURE_SERVER_IP }} <<'ENDSSH'
                      cd ${{ secrets.APP_PATH }}
                      git pull
                      sudo docker stop ${{ secrets.APP_NAME }}
                      sudo docker system prune -f
                      sudo docker build --tag=${{ secrets.APP_NAME }} .
                      sudo docker run -d ${{ secrets.APP_NAME }}
                      ENDSSH